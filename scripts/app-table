#!/usr/bin/env python

from matplotlib import pyplot as plt
import upcycle as U
import numpy as np
import os

apps : dict[str, U.apps.Trace] = {
    'resnet50-infer':  U.apps.mlperf_v1_apps['resnet50'].default_infer_online(),
    'resnet50-train':   U.apps.mlperf_v1_apps['resnet50'].default_train_small(),

    'ssdrn34-infer':  U.apps.mlperf_v1_apps['ssdrn34-1200'].default_infer_online(),
    'ssdrn34-train':   U.apps.mlperf_v1_apps['ssdrn34-300'].default_train_small(),

    'unet-infer':  U.apps.mlperf_v1_apps['unet'].default_infer_online(),
    'unet-train':   U.apps.mlperf_v1_apps['unet'].default_train_small(),

    'bert-infer':  U.apps.mlperf_v1_apps['bert-large-squad'].default_infer_online(),
    'bert-train':   U.apps.mlperf_v1_apps['bert-large-pretrain'].default_train_small(),

    'rnnt-infer':  U.apps.mlperf_v1_apps['rnnt'].default_infer_online(),
    'rnnt-train':   U.apps.mlperf_v1_apps['rnnt'].default_train_small(),
}

appnames = ['resnet50', 'ssdrn34', 'unet', 'bert', 'rnnt']

primary_ops = {
    'resnet50': 'Conv2D',
    'ssdrn34': 'Conv2D',
    'unet': 'Conv3D',
    'bert': 'MatMul',
    'rnnt': 'LSTM, MM',
}

def appdata(appname, mode):
    app = apps[f'{appname}-{mode}']
    mlperf_app = \
        U.apps.mlperf_v1_apps[U.apps.short_appname_map[(appname, mode)]]

    real_flops = mlperf_app.real_infer_flops if mode == 'infer' else \
        mlperf_app.real_train_flops

    if real_flops is None: real_flops = app.flops

    if real_flops < app.flops: real_flops = app.flops

    pct = int(np.round(app.flops / real_flops * 100, 2))
    if pct == 100: pct = 99

    return ' & '.join([
        f'{int(np.round(app.flops / 1e9, 2))}',
        str(len(app.unique_ops)),
        # 'Static' if appname != 'rnnt' else 'Dynamic',
        primary_ops[appname],
        f'{pct}\\%'
    ])


print(f"""
\\begin{{tabular}}{{lrrllr}}
\\hline
\\multicolumn{{1}}{{c}}{{Network}} &
\\multicolumn{{1}}{{c}}{{GOPs}} &
\\multicolumn{{1}}{{c}}{{Shapes}} &
\\multicolumn{{1}}{{c}}{{Primary Ops}} &
\\multicolumn{{1}}{{c}}{{\\%}} \\\\ \\hline

\\multicolumn{{1}}{{l|}}{{RN50}} & {appdata('resnet50', 'infer')} \\\\
\\multicolumn{{1}}{{l|}}{{SSD}}  & {appdata('ssdrn34', 'infer')} \\\\
\\multicolumn{{1}}{{l|}}{{UNET}} & {appdata('unet', 'infer')} \\\\
\\multicolumn{{1}}{{l|}}{{BERT}} & {appdata('bert', 'infer')} \\\\
\\multicolumn{{1}}{{l|}}{{RNNT}} & {appdata('rnnt', 'infer')} \\\\
\\hline
\\multicolumn{{1}}{{l|}}{{RN50}} & {appdata('resnet50', 'train')} \\\\
\\multicolumn{{1}}{{l|}}{{SSD}}  & {appdata('ssdrn34', 'train')} \\\\
\\multicolumn{{1}}{{l|}}{{UNET}} & {appdata('unet', 'train')} \\\\
\\multicolumn{{1}}{{l|}}{{BERT}} & {appdata('bert', 'train')} \\\\
\\multicolumn{{1}}{{l|}}{{RNNT}} & {appdata('rnnt', 'train')} \\\\
\\hline
\\end{{tabular}}
""")
